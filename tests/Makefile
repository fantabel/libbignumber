# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = /opt/gtest
LOG4CXX_DIR = /opt/log4cxx

# Where to find user code.
USER_DIR = .

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/headers -I $(LIBNUMBER_DIR)/headers

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

LNKFLAGS += -g -Wall -Wextra

OBJECTS += test_numberlike_array.o \
           test_big_integer.o

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = test_suite

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/headers/gtest/*.h \
                $(GTEST_DIR)/headers/gtest/internal/*.h

LIBNUMBER_HEADERS = ../headers/*.hh
LIBNUMBER_DIR = ..

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o: $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest.a: gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

test_big_integer.o : $(USER_DIR)/test_big_integer.cc \
                     $(GTEST_HEADERS) $(LIBNUMBER_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/test_big_integer.cc

test_numberlike_array.o : $(USER_DIR)/test_numberlike_array.cc \
                          $(GTEST_HEADERS) $(LIBNUMBER_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/test_numberlike_array.cc

main.o: $(USER_DIR)/main.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) LOG4CXX_HEADERS -c $(USER_DIR)/main.cc

test_suite: main.o $(OBJECTS) gtest.a ../libnumber.a
	$(CXX) $(CPPFLAGS) $(LNKFLAG) -lpthread $^ -o $@

